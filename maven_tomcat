Class 13
===================================
Maven 

javac Helloworld.java        ======>   java Helloworld.class      ========>       hello, world
                 compilation/javac                          execuation/java 
				 

                                                                                                           Binaries (.war | .jar | .ear )

javac Helloworld1000.java        ======>   java Helloworld1000.class      ========>       hello, world
                 compilation/javac                          execuation/java 



maven
===============
java  ===> class ==> testcases ===> binaries | artifacts | Delevarables | packaging(.war | .jar | .ear) ===> deploy

pom.xml ===> project object model 


======================
Class 14

maven ===> goals ===> plugin ====> task

Maven Lifecycle
=================================
1)clean  ==> This phase clean the temporary and runtime files.

2)default ===> Build Lifecycle 
- prepare-resources ===> resource copying --> Resource copying can be customized in this phase.
- validate          ===> Validates if the project is correct and if all necessary information is available(POM.xml)
- compile           ===> Source code compilation is done in this phase
- test              ===> Tests the compiled source code suitable for testing framework
- package           ===> This phase creates the JAR/WAR package as mentioned in the packaging in POM.xml.
- install           ===> This phase installs the package in local/remote maven repository
- deploy            ===> Copies the final package to the remote repository/server.

3)site
This phase is generally used to create fresh documentation to create reports, deploy site, etc


maven steps to install
============================
apt install java 
    java --version
    openjdk 11.0.21 2023-10-17
    OpenJDK Runtime Environment (build 11.0.21+9-post-Ubuntu-0ubuntu122.04)
    OpenJDK 64-Bit Server VM (build 11.0.21+9-post-Ubuntu-0ubuntu122.04, mixed mode, sharing)
apt install maven 
    mvn --version
    Apache Maven 3.6.3


Jar files
mvn archetype:generate -DgroupId=retail -DartifactId=hdfc -Dversion=1.0-SNAPSHOT -Dpackaging=jar -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false


war file:
mvn archetype:generate -DgroupId=com.canara -DartifactId=canara -DarchetypeArtifactId=maven-archetype-webapp -DinteractiveMode=false


ear file
mvn archetype:generate -DgroupId=com.packt.cookbook -DartifactId=simple-ear -DarchetypeArtifactId=wildfly-javaee7-webapp-ear-archetype -DinteractiveMode=org.wildfly.archetype -DinteractiveMode=false	


mvn archetype:generate
Define value for property 'groupId': hdfc
Define value for property 'artifactId': bank
Define value for property 'version' 1.0-SNAPSHOT: : 1.0-SNAPSHOT
Define value for property 'package' hdfc: .jar

Confirm properties configuration:
groupId: hdfc
artifactId: bank
version: 1.0-SNAPSHOT
package: hdfc



HDFC or whatsapp
Major version
1.*
2.*
3.*
4.*
5.*

Minor version
1.1 or 1.2 or 1.3

2.1 or 2.2 or 2.3



GroupId: ProjectName/ Organisation Name
ArtifactId : Filename
Version: Developer/Release version
Package: jar|war|ear

pom.xml

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>retail</groupId>
  <artifactId>hdfc</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>hdfc</name>
  <url>http://maven.apache.org</url>
<properties>
   <maven.compiler.source>1.6</maven.compiler.source>
   <maven.compiler.target>1.6</maven.compiler.target>
 </properties>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>



mvn clean package ===> mvn clean + mvn package 


Class 15
================================================

/root/.m2/repository/org/apache/maven/plugins



ip-172-31-25-208

====================================================================================
Class 16

Password communication

root@ip-172-31-89-181: hostname -i
root@ip-172-31-89-181:~# hostname server1
root@ip-172-31-89-181:~#
root@ip-172-31-89-181:~# sudo su -
root@server1:~#

1)
vim /etc/ssh/sshd_config 


#PermitRootLogin prohibit-password  ===> 
PermitRootLogin yes
Allowusers root ubuntu

PasswordAuthentication no  ===> PasswordAuthentication yes

2)
systemctl status sshd.service  ==> systemctl restart sshd.service

3)
root@server1:/etc/ssh# passwd root
New password:
Retype new password:
passwd: password updated successfully

cp a.java tcs/

scp -r <filename> user@<Private_Ip>:<destination_path>

scp -r a.java root@172.31.25.208:/root/tcs

scp -r canara.war root@172.31.89.181:/root
===================
Passwordless communication


Server1

root@server1:~# ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /root/.ssh/id_rsa
Your public key has been saved in /root/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:gcK/CaiAzoNq9hHQN5DMA9PIK2cxXEwR3obYoac3oYQ root@server1
The key's randomart image is:
+---[RSA 3072]----+
|.+*=Bo           |
| +*%o+ .         |
|E.=+Xo+ .        |
|oo+=.=.  .       |
|+o+.+ . S        |
|=. ..o o         |
|o+ .  o          |
|.o. .            |
|+ ..             |
+----[SHA256]-----+

root@server1:~# cd  /root/.ssh/
root@server1:~/.ssh# ls -lrt
total 20
-rw------- 1 root root  552 Dec 14 03:39 authorized_keys
-rw-r--r-- 1 root root  142 Dec 14 03:57 known_hosts.old
-rw------- 1 root root  978 Dec 14 03:57 known_hosts
-rw-r--r-- 1 root root  566 Dec 14 04:04 id_rsa.pub
-rw------- 1 root root 2602 Dec 14 04:04 id_rsa
root@server1:~/.ssh# cat id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCkSQLTRdCZF4dgxzBRms1jpHEMUSCJingzLtTKnIckbI7e+q7J7lInul4g5nB76RawFgsPOvTkABFdq8KjUP+DZbGogeVfNYDV0X9PfWDHkcCYRdTPjy4u7lQPIn2LDGjxdUGoaqBRT19CXohoh5Urn/XL75Wnyc6sGKalKBDuj+R9wLYkOEFBhHTGnDlvDv8XKD+FpLk2cnzlaeuDnX/Y9dTV7F/eY5auxpGfqJZFsW5HCjZzNwrjHULqjWXMAtGMmsA2wD3dTlWWKhGSGXIYkf3FhkIXds5jTnNWabwAHAcw/2PEMYhQhtW4bW+7sSxX5xH5bqNxGePzE34RePS2YsySi3jjQ9nM6lu/U2Q5pBiSBJ7t4FbEkQ6UoBuqD2iWHLW8pfVdfEmXS6D+g4f5Ie8WTAlcoeXrVFfedzt+cqWMe7IqfONi/Puicztdk10pWOnx8DoNaj+EMmrZHM7tNy61uvjS68bC8FFkF4f67G7wb5L22Q487B6hMvtf0Uc= root@server1


server 2
/root/.ssh/authorized_keys

Linux
Git
AWS instance launch(EC2)
maven
Password/Passwordless Communication
Tomcat
Jenkins
Plugin based deployment
CI/CD
DCL
